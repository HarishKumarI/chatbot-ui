{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["converter","showdown","App","props","state","query","msgs","user_type","msg","currentTime","suggested","answers","suggested_visible","showSuggestions","show_dots","handleQuery","bind","date","Date","hours","getHours","min","getMinutes","time","e","question","keyCode","this","length","setState","user_query","push","setTimeout","answerElement","makeHtml","json2md","replace","document","getElementsByClassName","clientHeight","scrollHeight","scrollTop","err","getElementById","innerText","ScrollElement","scrollLeft","scrollWidth","prev_type","messages_block","messages","forEach","msg_data","index","key","className","suppressContentEditableWarning","dangerouslySetInnerHTML","__html","undefined","onClick","move_left","map","move_right","id","contentEditable","data-placeholder","onInput","target","onKeyUp","Send","React","Component","Boolean","window","location","hostname","match","styleLink","createElement","rel","href","head","appendChild","styleLink1","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6c029811.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nimport { Send } from '@material-ui/icons'\n\nimport * as showdown from 'showdown' \nimport * as json2md from 'json2md'\n\nvar converter = new showdown.Converter({'noHeaderId':'true'})\n\n\nclass App extends React.Component{\n  constructor(props){\n    super()\n\n    this.state = {\n      query:\"\",\n      msgs: [\n          { user_type: 'bot', msg: 'Hi', ...this.currentTime()},\n          // { user_type: 'bot1', msg: 'Welcome to CarsQA chatbot1.', ...this.currentTime() },\n          { user_type: 'bot', msg: 'How can I help you?', ...this.currentTime()}\n      ],\n      suggested:[\n        \"what are the variants of alto?\",\n        \"what is the mileage of alto?\",\n        \"list of new cars\",\n        \"most sold car\"\n      ],\n      answers:[\n        [\n          [\n              [\n                  {\n                      \"p\": \"Alto has following variants :\"\n                  },\n                  {\n                      \"ul\": [\n                          {\n                              \"p\": \"Maruti Suzuki Alto LXi (O) CNG. It's fuel type - CNG\"\n                          },\n                          {\n                              \"p\": \"Maruti Suzuki Alto LXi CNG. It's fuel type - CNG\"\n                          },\n                          {\n                              \"p\": \"Maruti Suzuki Alto STD. It's fuel type - Petrol\"\n                          },\n                          {\n                              \"p\": \"Maruti Suzuki Alto LXi (O). It's fuel type - Petrol\"\n                          },\n                          {\n                              \"p\": \"Maruti Suzuki Alto VXi. It's fuel type - Petrol\"\n                          },\n                          {\n                              \"p\": \"Maruti Suzuki Alto VXi Plus. It's fuel type - Petrol\"\n                          },\n                          {\n                              \"p\": \"Maruti Suzuki Alto STD (O). It's fuel type - Petrol\"\n                          }\n                      ]\n                  }\n              ]\n          ]\n        ],\n        [{\"p\": \"which variant are you interested in?\"}],\n      ],\n      suggested_visible: 0,\n      showSuggestions: true,\n      show_dots: false\n    } \n\n    this.handleQuery = this.handleQuery.bind(this)\n    this.currentTime = this.currentTime.bind(this)\n  }\n\n  currentTime(){\n    const date = new Date()\n    const hours = date.getHours()\n    const min = date.getMinutes()\n    const time = `${hours === 0 ? 12 : hours}:${min}${hours > 12 ? ' PM' : ' AM' }`\n    return { time, date }\n  }\n\n\n\n  handleQuery(e, question= \"\"){\n    if ( ( e.keyCode === 13 && this.state.query.length > 0 ) || question.length > 0 ){\n      this.setState({show_dots: true})\n      let {query, msgs} = this.state\n      const user_query = { user_type: 'user', msg: question.length > 0 ? question : this.state.query, ...this.currentTime() }\n      msgs.push(user_query)\n      \n      setTimeout( () => {\n        try{\n\n          setTimeout(()=>{\n            let answerElement = converter.makeHtml( json2md( this.state.answers[0] ) )\n            answerElement = answerElement.replace(/<a href=\"/g,'<a target=\"_blank\" href=\"')\n            msgs.push( { user_type: 'bot', msg: answerElement, ...this.currentTime() } )\n            this.setState({ msgs, show_dots: true })\n           \n            try{\n              const { clientHeight, scrollHeight } = document.getElementsByClassName('messages')[0]\n              if( clientHeight !== scrollHeight )\n                document.getElementsByClassName('messages')[0].scrollTop = scrollHeight\n            }\n            catch(err){}\n\n            setTimeout(() => {\n              let answerElement = converter.makeHtml( json2md( this.state.answers[1] ) )\n              answerElement = answerElement.replace(/<a href=\"/g,'<a target=\"_blank\" href=\"')\n              msgs.push( { user_type: 'bot', msg: answerElement, ...this.currentTime() } )\n              this.setState({ msgs, show_dots: false })\n\n              try{\n                const { clientHeight, scrollHeight } = document.getElementsByClassName('messages')[0]\n                if( clientHeight !== scrollHeight )\n                  document.getElementsByClassName('messages')[0].scrollTop = scrollHeight\n              }\n              catch(err){}\n              \n            }, 800)\n          }, 200)\n\n          this.setState({ show_dots: false })\n          query = ''\n          document.getElementById('user_input').innerText = null\n\n          const { clientHeight, scrollHeight } = document.getElementsByClassName('messages')[0]\n          if( clientHeight !== scrollHeight )\n            document.getElementsByClassName('messages')[0].scrollTop = scrollHeight\n        }\n        catch(err){}\n\n      }, 250) \n\n      this.setState({ query, msgs})\n    }\n  }\n\n  move_left(e){\n    const ScrollElement = document.getElementsByClassName('suggested_ques_list1')[0]\n    const { scrollLeft } = ScrollElement\n    ScrollElement.scrollLeft = 0 >= scrollLeft - 20 ? 0 : scrollLeft - 20\n  }\n\n  move_right(e){\n    const ScrollElement = document.getElementsByClassName('suggested_ques_list1')[0]\n    const { scrollWidth, scrollLeft } = ScrollElement\n    ScrollElement.scrollLeft = scrollWidth <= scrollLeft + 20 ? scrollWidth : scrollLeft + 20\n  }\n\n  render(){\n    let prev_type = 'bot'\n    let messages_block = []\n\n    let messages = []\n    \n    this.state.msgs.forEach( (msg_data, index) => {\n      if ( prev_type.length === 0 || prev_type === msg_data.user_type  ){\n        // if( this.state.msgs[index + 1] !== undefined )\n        //   console.log( msg_data.msg, this.state.msgs[index + 1].time, msg_data.time, prev_type, this.state.msgs[index + 1].user_type  )\n\n        messages_block.push(  <div key={index}>\n                                  <div key={index} className={ `msg ${ msg_data.user_type === 'user' ? 'user_text' : '' }` } > \n                                    <div className={`${msg_data.user_type}`} suppressContentEditableWarning dangerouslySetInnerHTML={{ __html: msg_data.msg}} /> \n                                  </div>  \n                                  { this.state.msgs[index + 1] === undefined \n                                    || ( this.state.msgs[index + 1] !== undefined && this.state.msgs[index + 1].time !== msg_data.time ) \n                                      || ( this.state.msgs[index + 1] !== undefined && msg_data.user_type !== this.state.msgs[index + 1].user_type )?  \n                                      <div className=\"time\">{msg_data.time}</div> \n                                  : null }\n                            </div>\n          )\n      }\n      else {\n        messages.push(<div key={ `_${index}`} className=\"block \"  >{ messages_block }</div> )\n        messages_block = []\n        // if( this.state.msgs[index + 1] !== undefined )\n        // console.log( msg_data.msg, this.state.msgs[index + 1].time, msg_data.time, prev_type, this.state.msgs[index + 1].user_type  )\n\n        messages_block.push( <div key={ index }>\n                              <div className={ `msg ${ msg_data.user_type === 'user' ? 'user_text' : '' }` } > \n                                <div className={`${msg_data.user_type}`} suppressContentEditableWarning dangerouslySetInnerHTML={{ __html: msg_data.msg}} /> \n                              </div>\n                              { this.state.msgs[index + 1] === undefined \n                                    || ( this.state.msgs[index + 1] !== undefined && this.state.msgs[index + 1].time !== msg_data.time ) \n                                      || ( this.state.msgs[index + 1] !== undefined && msg_data.user_type !== this.state.msgs[index + 1].user_type )?  \n                                      <div className=\"time\">{msg_data.time}</div> \n                                  : null }\n                            </div>\n          )\n      }\n\n      if( index === this.state.msgs.length -1 ){\n        messages.push(<div key={ index } className=\"block\"  >{ messages_block }</div> )\n      }\n\n      prev_type = msg_data.user_type\n    })\n\n\n    return (\n      <div className=\"App \">\n        <div className=\"App-header\">\n          <div className=\"title\">CarsQA</div>\n        </div>\n        <div className=\"separater\"></div>\n\n        <div className=\"chat_interface\">\n          <div className=\"chat_window\" >\n            <div className=\"messages\">\n              { messages }\n            </div>\n\n            { this.state.showSuggestions ?\n              <div className=\"suggestion_ques_box\">\n                <div className=\"lt-arrow\" onClick={this.move_left}>&#10094;</div>\n                <div className=\"suggested_ques_list\">\n                  {\n                    this.state.suggested.map(( question, index) => {\n                        return <div key={index} className=\"suggested_que\" onClick={e => { this.setState({showSuggestions: false}); this.handleQuery({...e, keyCode: 13}, question) } }>{question}</div>\n                    })\n                  }\n                </div>\n                <div className=\"rt-arrow\" onClick={this.move_right} >&#10095;</div>\n              </div>\n            : null }\n\n            { this.state.show_dots ?\n              <div  className=\"dots\">\n                <div className=\"dot1\"></div>\n                <div className=\"dot2\"></div>\n                <div className=\"dot3\"></div>\n              </div>\n            : null }\n\n            <div className=\"chat_text_handler\">\n              <div id=\"user_input\" contentEditable=\"true\" suppressContentEditableWarning=\"true\" className=\"msg_input\" data-placeholder=\"Ask Something...\" \n                onInput={e => this.setState({ query: e.target.innerText === '\\n\\n\\n' ? '' : e.target.innerText})  } onKeyUp={this.handleQuery} >{''}</div>\n              <Send className={`send_icon ${ this.state.query.length > 0 ? 'query_available' : ''}`} onClick={e => this.handleQuery({...e,keyCode: 13}) } />\n          </div>\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst styleLink = document.createElement(\"link\")\nstyleLink.rel = \"stylesheet\"\nstyleLink.href = \"https://fonts.googleapis.com/css?family=Do Hyeon\"\ndocument.head.appendChild(styleLink)\n\nconst styleLink1 = document.createElement(\"link\")\nstyleLink1.rel = \"stylesheet\"\nstyleLink1.href = \"https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300;0,400;1,300&display=swap\"\ndocument.head.appendChild(styleLink1)\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}